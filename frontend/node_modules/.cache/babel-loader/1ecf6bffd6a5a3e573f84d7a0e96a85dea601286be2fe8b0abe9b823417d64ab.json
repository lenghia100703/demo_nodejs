{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    login: {\n      currentUser: null,\n      isFetching: false,\n      error: false\n    },\n    register: {\n      isFetching: false,\n      error: false,\n      success: false\n    },\n    logout: {\n      isFetching: false,\n      error: false\n    }\n  },\n  reducers: {\n    loginStart: state => {\n      state.login.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.login.isFetching = false;\n      state.login.currentUser = action.payload;\n      state.login.error = false;\n    },\n    loginFailed: state => {\n      state.login.isFetching = false;\n      state.login.error = true;\n    },\n    registerStart: state => {\n      state.register.isFetching = true;\n    },\n    registerSuccess: state => {\n      state.register.isFetching = false;\n      state.register.error = false;\n      state.register.success = true;\n    },\n    registerFailed: state => {\n      state.register.isFetching = false;\n      state.register.error = true;\n      state.register.success = false;\n    },\n    logoutSuccess: state => {\n      state.logout.isFetching = false;\n      state.logout.error = false;\n    },\n    logoutFailed: state => {\n      state.logout.isFetching = false;\n      state.logout.error = true;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailed,\n  registerStart,\n  registerSuccess,\n  registerFailed\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","authSlice","name","initialState","login","currentUser","isFetching","error","register","success","logout","reducers","loginStart","state","loginSuccess","action","payload","loginFailed","registerStart","registerSuccess","registerFailed","logoutSuccess","logoutFailed","actions","reducer"],"sources":["D:/JS/nodejs/jwt-demo/frontend/src/redux/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: {\r\n        login: {\r\n            currentUser: null,\r\n            isFetching: false,\r\n            error: false,\r\n        },\r\n        register: {\r\n            isFetching: false,\r\n            error: false,\r\n            success: false,\r\n        },\r\n        logout: {\r\n            isFetching: false,\r\n            error: false,\r\n        },\r\n    },\r\n    reducers: {\r\n        loginStart: (state) => {\r\n            state.login.isFetching = true;\r\n        },\r\n        loginSuccess: (state, action) => {\r\n            state.login.isFetching = false;\r\n            state.login.currentUser = action.payload;\r\n            state.login.error = false;\r\n        },\r\n        loginFailed: (state) => {\r\n            state.login.isFetching = false;\r\n            state.login.error = true;\r\n        },\r\n\r\n        registerStart: (state) => {\r\n            state.register.isFetching = true;\r\n        },\r\n        registerSuccess: (state) => {\r\n            state.register.isFetching = false;\r\n            state.register.error = false;\r\n            state.register.success = true;\r\n        },\r\n        registerFailed: (state) => {\r\n            state.register.isFetching = false;\r\n            state.register.error = true;\r\n            state.register.success = false;\r\n        },\r\n\r\n        logoutSuccess: (state) => {\r\n            state.logout.isFetching = false;\r\n            state.logout.error = false;\r\n        },\r\n        logoutFailed: (state) => {\r\n            state.logout.isFetching = false;\r\n            state.logout.error = true;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { loginStart, loginSuccess, loginFailed, registerStart, registerSuccess, registerFailed } =\r\n    authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,KAAK,EAAE;MACHC,WAAW,EAAE,IAAI;MACjBC,UAAU,EAAE,KAAK;MACjBC,KAAK,EAAE;IACX,CAAC;IACDC,QAAQ,EAAE;MACNF,UAAU,EAAE,KAAK;MACjBC,KAAK,EAAE,KAAK;MACZE,OAAO,EAAE;IACb,CAAC;IACDC,MAAM,EAAE;MACJJ,UAAU,EAAE,KAAK;MACjBC,KAAK,EAAE;IACX;EACJ,CAAC;EACDI,QAAQ,EAAE;IACNC,UAAU,EAAGC,KAAK,IAAK;MACnBA,KAAK,CAACT,KAAK,CAACE,UAAU,GAAG,IAAI;IACjC,CAAC;IACDQ,YAAY,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7BF,KAAK,CAACT,KAAK,CAACE,UAAU,GAAG,KAAK;MAC9BO,KAAK,CAACT,KAAK,CAACC,WAAW,GAAGU,MAAM,CAACC,OAAO;MACxCH,KAAK,CAACT,KAAK,CAACG,KAAK,GAAG,KAAK;IAC7B,CAAC;IACDU,WAAW,EAAGJ,KAAK,IAAK;MACpBA,KAAK,CAACT,KAAK,CAACE,UAAU,GAAG,KAAK;MAC9BO,KAAK,CAACT,KAAK,CAACG,KAAK,GAAG,IAAI;IAC5B,CAAC;IAEDW,aAAa,EAAGL,KAAK,IAAK;MACtBA,KAAK,CAACL,QAAQ,CAACF,UAAU,GAAG,IAAI;IACpC,CAAC;IACDa,eAAe,EAAGN,KAAK,IAAK;MACxBA,KAAK,CAACL,QAAQ,CAACF,UAAU,GAAG,KAAK;MACjCO,KAAK,CAACL,QAAQ,CAACD,KAAK,GAAG,KAAK;MAC5BM,KAAK,CAACL,QAAQ,CAACC,OAAO,GAAG,IAAI;IACjC,CAAC;IACDW,cAAc,EAAGP,KAAK,IAAK;MACvBA,KAAK,CAACL,QAAQ,CAACF,UAAU,GAAG,KAAK;MACjCO,KAAK,CAACL,QAAQ,CAACD,KAAK,GAAG,IAAI;MAC3BM,KAAK,CAACL,QAAQ,CAACC,OAAO,GAAG,KAAK;IAClC,CAAC;IAEDY,aAAa,EAAGR,KAAK,IAAK;MACtBA,KAAK,CAACH,MAAM,CAACJ,UAAU,GAAG,KAAK;MAC/BO,KAAK,CAACH,MAAM,CAACH,KAAK,GAAG,KAAK;IAC9B,CAAC;IACDe,YAAY,EAAGT,KAAK,IAAK;MACrBA,KAAK,CAACH,MAAM,CAACJ,UAAU,GAAG,KAAK;MAC/BO,KAAK,CAACH,MAAM,CAACH,KAAK,GAAG,IAAI;IAC7B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,UAAU;EAAEE,YAAY;EAAEG,WAAW;EAAEC,aAAa;EAAEC,eAAe;EAAEC;AAAe,CAAC,GAClGnB,SAAS,CAACsB,OAAO;AAErB,eAAetB,SAAS,CAACuB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}